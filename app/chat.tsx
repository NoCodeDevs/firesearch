'use client';

import { useState, useEffect, useRef } from 'react';
import { search } from './search';
import { readStreamableValue } from 'ai/rsc';
import { SearchDisplay } from './search-display';
import { SearchEvent, Source } from '@/lib/langgraph-search-engine';
import { MarkdownRenderer } from './markdown-renderer';
import { CitationTooltip } from './citation-tooltip';
import { UI_CONFIG } from '@/lib/config';
import Image from 'next/image';
import { getFaviconUrl, getDefaultFavicon, markFaviconFailed } from '@/lib/favicon-utils';
import { getIndustryQuestions, AIQuestion } from '@/lib/ai-question-generator';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { toast } from "sonner";

// Industry-specific research templates
const INDUSTRY_TEMPLATES = {
  'real-estate': {
    name: 'Real Estate',
    icon: 'üè†',
    color: 'from-blue-500 to-cyan-500',
    questions: [
      "What's the TAM/SAM/SOM for PropTech in the US real estate market?",
      "How much revenue do top PropTech companies like Zillow, Realtor.com, and Redfin generate?",
      "What are the biggest pain points for real estate agents using MLS systems?",
      "How do successful real estate marketplaces achieve product-market fit?",
      "What's the adoption rate of virtual tours and 3D property visualization?",
      "What are the compliance challenges with Fair Housing Act for real estate AI tools?",
      "How do real estate startups handle data privacy with property information?",
      "What's the market opportunity for real estate crowdfunding platforms?"
    ]
  },
  'automotive': {
    name: 'Automotive',
    icon: 'üöó',
    color: 'from-red-500 to-orange-500',
    questions: [
      "What's the market size for EV charging infrastructure in North America?",
      "How much Series A funding do autonomous vehicle startups typically raise?",
      "What are the biggest technical challenges in Level 4 autonomous driving?",
      "How do automotive OEMs integrate third-party telematics systems?",
      "What's the adoption rate of connected car technology among new vehicles?",
      "What are the cybersecurity risks in automotive software platforms?",
      "How do automotive startups handle vehicle data ownership and monetization?",
      "What's the market opportunity for aftermarket automotive software?"
    ]
  },
  'content-creation': {
    name: 'Content Creation',
    icon: 'üé¨',
    color: 'from-purple-500 to-pink-500',
    questions: [
      "What's the market size for AI-powered content creation tools?",
      "How much do content creators spend on tools and software monthly?",
      "What are the biggest pain points for TikTok creators managing multiple platforms?",
      "How do successful content creation platforms achieve viral distribution?",
      "What's the conversion rate for content creator affiliate marketing?",
      "What are the copyright and licensing challenges for AI-generated content?",
      "How do content platforms handle creator monetization at scale?",
      "What's the market opportunity for niche content creation communities?"
    ]
  },
  'youtube': {
    name: 'YouTube & Video',
    icon: 'üì∫',
    color: 'from-red-600 to-red-400',
    questions: [
      "What's the total revenue generated by the YouTube creator economy?",
      "How much do mid-tier YouTubers with 100K subscribers earn monthly?",
      "What are the biggest challenges with YouTube's algorithm changes?",
      "How do successful YouTube channels optimize their thumbnail strategy?",
      "What's the ROI for YouTube advertising for B2B SaaS companies?",
      "What are the copyright strike patterns for different content categories?",
      "How do YouTube MCNs handle creator contract negotiations?",
      "What's the market opportunity for short-form video automation tools?"
    ]
  },
  'fintech': {
    name: 'FinTech',
    icon: 'üí≥',
    color: 'from-green-500 to-emerald-500',
    questions: [
      "What's the market size for digital banking platforms in the US?",
      "How much do fintech startups spend on SOC 2 compliance annually?",
      "What are the biggest challenges with ACH payment processing?",
      "How do successful fintech apps achieve 80%+ monthly retention?",
      "What's the fraud rate for different payment processing methods?",
      "What are the regulatory hurdles for crypto trading platforms?",
      "How do fintech startups handle KYC/AML compliance at scale?",
      "What's the market opportunity for embedded finance solutions?"
    ]
  },
  'healthcare': {
    name: 'Healthcare',
    icon: 'üè•',
    color: 'from-teal-500 to-blue-500',
    questions: [
      "What's the market size for telemedicine platforms in the US?",
      "How much do healthcare startups spend on HIPAA compliance?",
      "What are the biggest adoption barriers for EHR systems in small practices?",
      "How do successful healthtech startups navigate FDA approval processes?",
      "What's the reimbursement rate for remote patient monitoring devices?",
      "What are the data privacy challenges with health information exchange?",
      "How do healthcare platforms handle provider credentialing?",
      "What's the market opportunity for AI-powered medical diagnostics?"
    ]
  },
  'ecommerce': {
    name: 'E-commerce',
    icon: 'üõí',
    color: 'from-orange-500 to-yellow-500',
    questions: [
      "What's the market size for headless commerce platforms?",
      "How much do successful D2C brands spend on customer acquisition?",
      "What are the biggest logistics challenges for cross-border e-commerce?",
      "How do top e-commerce brands optimize their conversion funnels?",
      "What's the cart abandonment rate across different product categories?",
      "What are the compliance challenges with international shipping regulations?",
      "How do e-commerce platforms handle chargeback disputes?",
      "What's the market opportunity for social commerce integrations?"
    ]
  },
  'saas': {
    name: 'SaaS & Software',
    icon: 'üíª',
    color: 'from-indigo-500 to-purple-500',
    questions: [
      "What's the average CAC for B2B SaaS companies in my vertical?",
      "How much do enterprise SaaS companies spend on customer success?",
      "What are the biggest challenges with enterprise software adoption?",
      "How do successful SaaS companies achieve 95%+ product-qualified leads?",
      "What's the churn rate for different SaaS pricing tiers?",
      "What are the integration challenges with existing enterprise systems?",
      "How do SaaS companies optimize their freemium to paid conversion?",
      "What's the market opportunity for vertical SaaS solutions?"
    ]
  },
  'edtech': {
    name: 'Education Technology',
    icon: 'üéì',
    color: 'from-violet-500 to-purple-600',
    questions: [
      "What's the market size for online learning platforms in higher education?",
      "How much do universities spend on learning management systems?",
      "What are the biggest challenges with student engagement in online courses?",
      "How do successful edtech startups achieve regulatory compliance?",
      "What's the completion rate for different online learning formats?",
      "What are the data privacy challenges with student learning analytics?",
      "How do edtech platforms handle content personalization at scale?",
      "What's the market opportunity for corporate training software?"
    ]
  },
  'foodtech': {
    name: 'Food Technology',
    icon: 'üçΩÔ∏è',
    color: 'from-amber-500 to-orange-600',
    questions: [
      "What's the market size for meal kit delivery services?",
      "How much do ghost kitchens cost to operate monthly?",
      "What are the biggest challenges with food delivery logistics?",
      "How do successful foodtech startups handle food safety compliance?",
      "What's the customer acquisition cost for food delivery apps?",
      "What are the supply chain challenges for local food sourcing?",
      "How do foodtech platforms optimize dynamic pricing?",
      "What's the market opportunity for plant-based food technology?"
    ]
  },
  'cleantech': {
    name: 'Clean Technology',
    icon: 'üå±',
    color: 'from-emerald-500 to-green-600',
    questions: [
      "What's the market size for renewable energy software platforms?",
      "How much do clean energy startups spend on carbon credit certification?",
      "What are the biggest technical challenges in smart grid technology?",
      "How do cleantech startups navigate government subsidy programs?",
      "What's the adoption rate of IoT sensors in industrial energy management?",
      "What are the regulatory challenges for carbon tracking software?",
      "How do clean energy platforms handle utility company integrations?",
      "What's the market opportunity for circular economy software?"
    ]
  },
  'gaming': {
    name: 'Gaming & Esports',
    icon: 'üéÆ',
    color: 'from-pink-500 to-rose-600',
    questions: [
      "What's the market size for gaming monetization platforms?",
      "How much do mobile game studios spend on user acquisition?",
      "What are the biggest challenges with live service game economies?",
      "How do successful game studios optimize their monetization strategy?",
      "What's the average revenue per user for different game genres?",
      "What are the compliance challenges with gambling mechanics in games?",
      "How do gaming platforms handle toxic community management?",
      "What's the market opportunity for esports streaming infrastructure?"
    ]
  },
  'hr-tech': {
    name: 'HR Technology',
    icon: 'üë•',
    color: 'from-cyan-500 to-blue-600',
    questions: [
      "What's the market size for applicant tracking systems?",
      "How much do enterprises spend on HR software annually?",
      "What are the biggest challenges with employee data privacy?",
      "How do successful HR tech startups achieve high adoption rates?",
      "What's the time-to-hire improvement with modern ATS platforms?",
      "What are the integration challenges with existing HR systems?",
      "How do HR platforms handle compliance with labor laws?",
      "What's the market opportunity for AI-powered recruitment tools?"
    ]
  },
  'proptech': {
    name: 'PropTech',
    icon: 'üè¢',
    color: 'from-slate-500 to-gray-600',
    questions: [
      "What's the market size for smart building technology?",
      "How much do commercial real estate owners spend on IoT sensors?",
      "What are the biggest challenges with building management system integration?",
      "How do PropTech startups achieve product-market fit in commercial real estate?",
      "What's the ROI for smart building energy management systems?",
      "What are the data security challenges with building IoT networks?",
      "How do PropTech platforms handle multi-tenant property management?",
      "What's the market opportunity for proptech in affordable housing?"
    ]
  },
  'agritech': {
    name: 'Agriculture Technology',
    icon: 'üåæ',
    color: 'from-lime-500 to-green-600',
    questions: [
      "What's the market size for precision agriculture technology?",
      "How much do large farms spend on IoT sensors and monitoring?",
      "What are the biggest challenges with rural broadband connectivity?",
      "How do agritech startups handle variable weather-dependent revenue?",
      "What's the adoption rate of drone technology in commercial farming?",
      "What are the data privacy challenges with farm data collection?",
      "How do agritech platforms handle commodity price volatility?",
      "What's the market opportunity for vertical farming automation?"
    ]
  },
  'legaltech': {
    name: 'Legal Technology',
    icon: '‚öñÔ∏è',
    color: 'from-stone-500 to-slate-600',
    questions: [
      "What's the market size for legal practice management software?",
      "How much do law firms spend on document automation tools?",
      "What are the biggest challenges with legal data privacy and security?",
      "How do legaltech startups achieve regulatory compliance?",
      "What's the contract review efficiency improvement with AI tools?",
      "What are the integration challenges with existing legal case management?",
      "How do legal platforms handle attorney-client privilege?",
      "What's the market opportunity for legal analytics and insights?"
    ]
  },
  'insurtech': {
    name: 'Insurance Technology',
    icon: 'üõ°Ô∏è',
    color: 'from-sky-500 to-blue-600',
    questions: [
      "What's the market size for usage-based auto insurance platforms?",
      "How much do insurance companies spend on claims processing technology?",
      "What are the biggest challenges with parametric insurance products?",
      "How do insurtech startups navigate insurance licensing requirements?",
      "What's the fraud detection accuracy improvement with AI systems?",
      "What are the data privacy challenges with personal risk assessment?",
      "How do insurtech platforms handle reinsurance partnerships?",
      "What's the market opportunity for wellness-based health insurance?"
    ]
  },
  'marketplace': {
    name: 'Marketplace Platforms',
    icon: 'üè™',
    color: 'from-rose-500 to-pink-600',
    questions: [
      "What's the market size for B2B marketplace platforms in manufacturing?",
      "How much do marketplace startups spend on trust and safety?",
      "What are the biggest challenges with marketplace liquidity?",
      "How do successful marketplaces achieve network effects?",
      "What's the take rate for different marketplace business models?",
      "What are the fraud prevention challenges for P2P marketplaces?",
      "How do marketplace platforms handle dispute resolution?",
      "What's the market opportunity for niche professional services marketplaces?"
    ]
  },
  'cybersecurity': {
    name: 'Cybersecurity',
    icon: 'üîí',
    color: 'from-red-600 to-red-800',
    questions: [
      "What's the market size for endpoint security solutions?",
      "How much do enterprises spend on cybersecurity annually?",
      "What are the biggest challenges with zero-trust architecture implementation?",
      "How do cybersecurity startups achieve enterprise sales cycles?",
      "What's the average time to detect and respond to security breaches?",
      "What are the compliance challenges with data protection regulations?",
      "How do security platforms handle threat intelligence sharing?",
      "What's the market opportunity for AI-powered threat detection?"
    ]
  },
  'blockchain': {
    name: 'Blockchain & Web3',
    icon: '‚õìÔ∏è',
    color: 'from-yellow-500 to-orange-600',
    questions: [
      "What's the market size for DeFi protocols and applications?",
      "How much do Web3 startups spend on smart contract auditing?",
      "What are the biggest challenges with blockchain scalability?",
      "How do successful Web3 projects achieve user adoption?",
      "What's the gas fee optimization for different blockchain networks?",
      "What are the regulatory challenges with cryptocurrency compliance?",
      "How do blockchain platforms handle cross-chain interoperability?",
      "What's the market opportunity for enterprise blockchain solutions?"
    ]
  },
  'traveltech': {
    name: 'Travel Technology',
    icon: '‚úàÔ∏è',
    color: 'from-blue-400 to-cyan-500',
    questions: [
      "What's the market size for travel booking platforms?",
      "How much do travel startups spend on customer acquisition?",
      "What are the biggest challenges with dynamic pricing in travel?",
      "How do successful travel platforms handle seasonal demand fluctuations?",
      "What's the conversion rate for different travel booking channels?",
      "What are the integration challenges with airline and hotel APIs?",
      "How do travel platforms handle cancellation and refund policies?",
      "What's the market opportunity for sustainable travel technology?"
    ]
  },
  'logistics': {
    name: 'Logistics & Supply Chain',
    icon: 'üì¶',
    color: 'from-indigo-600 to-purple-700',
    questions: [
      "What's the market size for last-mile delivery solutions?",
      "How much do logistics companies spend on route optimization?",
      "What are the biggest challenges with supply chain visibility?",
      "How do successful logistics startups achieve operational efficiency?",
      "What's the cost reduction potential with automated warehousing?",
      "What are the integration challenges with existing ERP systems?",
      "How do logistics platforms handle real-time tracking and updates?",
      "What's the market opportunity for sustainable logistics solutions?"
    ]
  },
  'retailtech': {
    name: 'Retail Technology',
    icon: 'üõçÔ∏è',
    color: 'from-pink-400 to-rose-500',
    questions: [
      "What's the market size for omnichannel retail platforms?",
      "How much do retailers spend on inventory management systems?",
      "What are the biggest challenges with retail personalization?",
      "How do successful retail tech startups achieve store adoption?",
      "What's the ROI for AI-powered demand forecasting?",
      "What are the integration challenges with POS systems?",
      "How do retail platforms handle customer data privacy?",
      "What's the market opportunity for social commerce technology?"
    ]
  },
  'martech': {
    name: 'Marketing Technology',
    icon: 'üìä',
    color: 'from-emerald-400 to-teal-500',
    questions: [
      "What's the market size for marketing automation platforms?",
      "How much do companies spend on marketing technology stacks?",
      "What are the biggest challenges with cross-channel attribution?",
      "How do successful martech startups achieve enterprise adoption?",
      "What's the ROI improvement with AI-powered marketing optimization?",
      "What are the data privacy challenges with customer tracking?",
      "How do marketing platforms handle cookie-less tracking?",
      "What's the market opportunity for privacy-first marketing tools?"
    ]
  },
  'biotech': {
    name: 'Biotechnology',
    icon: 'üß¨',
    color: 'from-green-600 to-emerald-700',
    questions: [
      "What's the market size for precision medicine platforms?",
      "How much do biotech startups spend on clinical trials?",
      "What are the biggest challenges with drug discovery timelines?",
      "How do successful biotech companies navigate FDA approval?",
      "What's the success rate for different therapeutic approaches?",
      "What are the regulatory challenges with gene therapy?",
      "How do biotech platforms handle intellectual property protection?",
      "What's the market opportunity for AI-driven drug development?"
    ]
  },
  'spacetech': {
    name: 'Space Technology',
    icon: 'üöÄ',
    color: 'from-slate-600 to-gray-800',
    questions: [
      "What's the market size for satellite internet services?",
      "How much do space startups spend on launch costs?",
      "What are the biggest challenges with space debris management?",
      "How do successful space companies achieve launch reliability?",
      "What's the cost reduction potential with reusable rockets?",
      "What are the regulatory challenges with space operations?",
      "How do space platforms handle orbital mechanics optimization?",
      "What's the market opportunity for space-based manufacturing?"
    ]
  },
  'robotics': {
    name: 'Robotics & Automation',
    icon: 'ü§ñ',
    color: 'from-gray-500 to-slate-600',
    questions: [
      "What's the market size for industrial automation solutions?",
      "How much do robotics companies spend on R&D?",
      "What are the biggest challenges with human-robot collaboration?",
      "How do successful robotics startups achieve manufacturing scale?",
      "What's the ROI for robotic process automation in enterprises?",
      "What are the safety challenges with autonomous systems?",
      "How do robotics platforms handle real-time control systems?",
      "What's the market opportunity for service robotics?"
    ]
  },
  'iot': {
    name: 'Internet of Things',
    icon: 'üåê',
    color: 'from-blue-500 to-indigo-600',
    questions: [
      "What's the market size for IoT device management platforms?",
      "How much do IoT companies spend on connectivity solutions?",
      "What are the biggest challenges with IoT device security?",
      "How do successful IoT startups achieve device interoperability?",
      "What's the battery life optimization for edge IoT devices?",
      "What are the data privacy challenges with IoT sensors?",
      "How do IoT platforms handle real-time data processing?",
      "What's the market opportunity for industrial IoT solutions?"
    ]
  },
  'ai-ml': {
    name: 'AI & Machine Learning',
    icon: 'üß†',
    color: 'from-purple-600 to-violet-700',
    questions: [
      "What's the market size for AI model training platforms?",
      "How much do AI startups spend on compute infrastructure?",
      "What are the biggest challenges with AI model deployment?",
      "How do successful AI companies achieve model accuracy?",
      "What's the cost optimization for different AI training approaches?",
      "What are the ethical challenges with AI bias and fairness?",
      "How do AI platforms handle model versioning and management?",
      "What's the market opportunity for edge AI inference?"
    ]
  },
  'vr-ar': {
    name: 'VR & Augmented Reality',
    icon: 'ü•Ω',
    color: 'from-cyan-500 to-blue-600',
    questions: [
      "What's the market size for enterprise VR training solutions?",
      "How much do VR companies spend on content development?",
      "What are the biggest challenges with VR motion sickness?",
      "How do successful VR startups achieve user engagement?",
      "What's the hardware cost reduction for VR headsets?",
      "What are the content creation challenges for immersive experiences?",
      "How do VR platforms handle spatial computing optimization?",
      "What's the market opportunity for AR in retail and marketing?"
    ]
  },
  'energy': {
    name: 'Energy & Utilities',
    icon: '‚ö°',
    color: 'from-yellow-400 to-orange-500',
    questions: [
      "What's the market size for smart grid technology?",
      "How much do energy companies spend on grid modernization?",
      "What are the biggest challenges with renewable energy integration?",
      "How do successful energy startups achieve grid stability?",
      "What's the efficiency improvement with smart meters?",
      "What are the regulatory challenges with energy storage?",
      "How do energy platforms handle demand response optimization?",
      "What's the market opportunity for microgrid solutions?"
    ]
  },
  'construction': {
    name: 'Construction Technology',
    icon: 'üèóÔ∏è',
    color: 'from-amber-600 to-orange-700',
    questions: [
      "What's the market size for construction management software?",
      "How much do construction companies spend on project management tools?",
      "What are the biggest challenges with construction site safety?",
      "How do successful construction tech startups achieve adoption?",
      "What's the cost reduction potential with prefabrication?",
      "What are the integration challenges with existing construction workflows?",
      "How do construction platforms handle real-time project tracking?",
      "What's the market opportunity for modular construction technology?"
    ]
  },
  'fashion': {
    name: 'Fashion Technology',
    icon: 'üëó',
    color: 'from-fuchsia-500 to-pink-600',
    questions: [
      "What's the market size for fashion e-commerce platforms?",
      "How much do fashion brands spend on digital marketing?",
      "What are the biggest challenges with fashion trend prediction?",
      "How do successful fashion tech startups achieve brand partnerships?",
      "What's the return rate optimization for online fashion retail?",
      "What are the sustainability challenges in fast fashion?",
      "How do fashion platforms handle size and fit technology?",
      "What's the market opportunity for virtual try-on technology?"
    ]
  },
  'sports': {
    name: 'Sports Technology',
    icon: '‚öΩ',
    color: 'from-green-500 to-lime-600',
    questions: [
      "What's the market size for sports analytics platforms?",
      "How much do sports teams spend on performance tracking?",
      "What are the biggest challenges with athlete data privacy?",
      "How do successful sports tech startups achieve team partnerships?",
      "What's the injury prevention improvement with wearable technology?",
      "What are the integration challenges with existing sports systems?",
      "How do sports platforms handle real-time performance analytics?",
      "What's the market opportunity for fan engagement technology?"
    ]
  },
  'media': {
    name: 'Media & Entertainment',
    icon: 'üé≠',
    color: 'from-red-500 to-pink-600',
    questions: [
      "What's the market size for streaming platform technology?",
      "How much do media companies spend on content recommendation systems?",
      "What are the biggest challenges with content piracy prevention?",
      "How do successful media tech startups achieve content partnerships?",
      "What's the user engagement improvement with personalized content?",
      "What are the licensing challenges with global content distribution?",
      "How do media platforms handle real-time content delivery?",
      "What's the market opportunity for interactive entertainment?"
    ]
  },
  'telecom': {
    name: 'Telecommunications',
    icon: 'üì°',
    color: 'from-blue-600 to-indigo-700',
    questions: [
      "What's the market size for 5G network infrastructure?",
      "How much do telecom companies spend on network optimization?",
      "What are the biggest challenges with network coverage gaps?",
      "How do successful telecom startups achieve carrier partnerships?",
      "What's the latency improvement with edge computing?",
      "What are the regulatory challenges with spectrum allocation?",
      "How do telecom platforms handle network slicing optimization?",
      "What's the market opportunity for private 5G networks?"
    ]
  },
  'transportation': {
    name: 'Transportation Technology',
    icon: 'üöå',
    color: 'from-teal-600 to-cyan-700',
    questions: [
      "What's the market size for ride-sharing platform technology?",
      "How much do transportation startups spend on fleet management?",
      "What are the biggest challenges with route optimization?",
      "How do successful transportation tech startups achieve driver adoption?",
      "What's the efficiency improvement with electric vehicle fleets?",
      "What are the regulatory challenges with autonomous vehicles?",
      "How do transportation platforms handle real-time demand matching?",
      "What's the market opportunity for micro-mobility solutions?"
    ]
  },
  'real-estate-tech': {
    name: 'Real Estate Technology',
    icon: 'üèòÔ∏è',
    color: 'from-stone-500 to-gray-600',
    questions: [
      "What's the market size for property management software?",
      "How much do real estate companies spend on digital marketing?",
      "What are the biggest challenges with virtual property tours?",
      "How do successful real estate tech startups achieve agent adoption?",
      "What's the lead conversion improvement with CRM systems?",
      "What are the compliance challenges with fair housing laws?",
      "How do real estate platforms handle property valuation accuracy?",
      "What's the market opportunity for smart home technology?"
    ]
  },
  'pharma': {
    name: 'Pharmaceutical Technology',
    icon: 'üíä',
    color: 'from-emerald-600 to-green-700',
    questions: [
      "What's the market size for pharmaceutical manufacturing software?",
      "How much do pharma companies spend on drug discovery platforms?",
      "What are the biggest challenges with clinical trial management?",
      "How do successful pharma tech startups achieve regulatory approval?",
      "What's the time-to-market improvement with digital trials?",
      "What are the compliance challenges with FDA regulations?",
      "How do pharma platforms handle supply chain traceability?",
      "What's the market opportunity for personalized medicine technology?"
    ]
  },
  'banking': {
    name: 'Banking Technology',
    icon: 'üè¶',
    color: 'from-blue-700 to-indigo-800',
    questions: [
      "What's the market size for core banking systems?",
      "How much do banks spend on digital transformation?",
      "What are the biggest challenges with legacy system integration?",
      "How do successful banking tech startups achieve compliance?",
      "What's the customer experience improvement with digital banking?",
      "What are the security challenges with open banking APIs?",
      "How do banking platforms handle real-time payment processing?",
      "What's the market opportunity for embedded banking solutions?"
    ]
  },
  'insurance-tech': {
    name: 'Insurance Technology',
    icon: 'üõ°Ô∏è',
    color: 'from-sky-600 to-blue-700',
    questions: [
      "What's the market size for insurance claims processing software?",
      "How much do insurance companies spend on fraud detection?",
      "What are the biggest challenges with risk assessment accuracy?",
      "How do successful insurtech startups achieve underwriting efficiency?",
      "What's the claims processing time improvement with automation?",
      "What are the regulatory challenges with insurance licensing?",
      "How do insurance platforms handle real-time risk monitoring?",
      "What's the market opportunity for usage-based insurance models?"
    ]
  }
};

// Beautiful modern chat interface
function StartupChat({ children }: { children: React.ReactNode }) {
  return (
    <div className="relative w-full">
      <div className="relative z-10 w-full flex flex-col">
        {children}
      </div>
    </div>
  );
}

// Beautiful Message History Component
function CommandHistory({ messages, isSearching }: { messages: Array<{ id: string; role: 'user' | 'assistant'; content: string | React.ReactNode; isSearch?: boolean; searchResults?: string }>; isSearching: boolean }) {
  const messagesRef = useRef<HTMLDivElement>(null);

  // Auto-scroll to bottom when new messages are added
  useEffect(() => {
    if (!UI_CONFIG.AUTO_SCROLL_ENABLED || !messagesRef.current) return;
    
    // Always scroll to bottom when new content is added
    setTimeout(() => {
      if (messagesRef.current) {
        messagesRef.current.scrollTo({
          top: messagesRef.current.scrollHeight,
          behavior: 'smooth'
        });
      }
    }, 50);
  }, [messages.length, isSearching]); // Also trigger on isSearching changes

  return (
    <div 
      ref={messagesRef}
      data-messages-container
      className="space-y-6 mb-6 px-6 py-4 min-h-[50vh] overflow-y-auto scrollbar-custom"
      style={{
        scrollbarWidth: 'thin',
        scrollbarColor: 'rgba(148, 163, 184, 0.3) transparent'
      }}
    >
      {messages.map((msg, index) => (
        <div key={msg.id}>
          {msg.role === 'user' ? (
            <div className="flex items-start gap-4 group">
              <div className="w-10 h-10 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl flex items-center justify-center flex-shrink-0">
                <span className="text-white text-sm font-bold">U</span>
              </div>
              <div className="bg-slate-900/80 border border-white/10 rounded-3xl px-6 py-5 w-full">
                <div className="flex items-center gap-3 mb-2">
                  <span className="text-emerald-400 text-xs font-semibold uppercase tracking-wide">You</span>
                  <div className="flex-1 h-px bg-emerald-400/20"></div>
                </div>
                <span className="text-slate-100 leading-relaxed text-base">{msg.content}</span>
              </div>
            </div>
          ) : (
            <div className="flex items-start gap-4 group">
              <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center flex-shrink-0">
                <span className="text-white text-sm font-bold">AI</span>
              </div>
              <div className="bg-slate-900/60 border border-white/20 rounded-3xl px-6 py-5 w-full">
                <div className="flex items-center gap-3 mb-3">
                  <span className="bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent text-xs font-semibold uppercase tracking-wide">FireSearch AI</span>
                  <div className="flex-1 h-px bg-purple-400/30"></div>
                </div>
                <div className="prose prose-sm dark:prose-invert max-w-none">
                  {msg.content}
                </div>
                {msg.isSearch && (
                  <div className="mt-6 pt-4 border-t border-white/10">
                    <div className="flex items-center gap-3 text-sm">
                      {isSearching ? (
                        <>
                          <div className="w-3 h-3 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-full animate-pulse"></div>
                          <span className="text-yellow-400 font-semibold">Research in progress...</span>
                          <div className="flex-1 h-px bg-yellow-400/20"></div>
                        </>
                      ) : (
                        <>
                          <div className="w-3 h-3 bg-gradient-to-r from-emerald-400 to-teal-400 rounded-full"></div>
                          <span className="text-emerald-400 font-semibold">Research completed</span>
                          <div className="flex-1 h-px bg-emerald-400/20"></div>
                        </>
                      )}
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
      ))}
    </div>
  );
}

// Hybrid Industry Selection Component
function HybridIndustrySelection({ onSelectIndustry }: { onSelectIndustry: (industry: string) => void }) {
  const [customIndustry, setCustomIndustry] = useState('');
  const [activeTab, setActiveTab] = useState('tech');
  const [searchQuery, setSearchQuery] = useState('');
  const [showAllIndustries, setShowAllIndustries] = useState(false);

  const handleCustomIndustrySubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (customIndustry.trim()) {
      onSelectIndustry(customIndustry.trim().toLowerCase().replace(/\s+/g, '-'));
    }
  };

  // Featured industries (most popular/relevant)
  const featuredIndustries = [
    'saas', 'fintech', 'healthcare', 'ecommerce', 'edtech', 'gaming', 'cybersecurity', 'ai-ml'
  ];

  // Categorized industries
  const industryCategories = {
    tech: {
      name: 'Technology',
      icon: 'üíª',
      industries: ['saas', 'ai-ml', 'cybersecurity', 'blockchain', 'iot', 'vr-ar', 'robotics', 'spacetech']
    },
    finance: {
      name: 'Finance & Business',
      icon: 'üí≥',
      industries: ['fintech', 'banking', 'insurtech', 'marketplace', 'hr-tech', 'legaltech', 'martech']
    },
    health: {
      name: 'Health & Life Sciences',
      icon: 'üè•',
      industries: ['healthcare', 'biotech', 'pharma', 'edtech', 'sports', 'fashion']
    },
    industry: {
      name: 'Industry & Infrastructure',
      icon: 'üè≠',
      industries: ['real-estate', 'automotive', 'logistics', 'energy', 'construction', 'telecom', 'transportation']
    }
  };

  // Filter industries based on search
  const filteredIndustries = Object.entries(INDUSTRY_TEMPLATES).filter(([key, industry]) =>
    industry.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
    key.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className="space-y-20">
      {/* Enhanced Header */}
      <div className="text-center">
        <div className="inline-block mb-8">
          <div className="px-6 py-3 bg-gradient-to-r from-purple-500/10 to-pink-500/10 border border-purple-500/20 rounded-full text-sm text-purple-300 font-medium shadow-glow">
            üéØ Choose Your Industry
          </div>
        </div>
        <h2 className="text-5xl md:text-6xl font-black bg-gradient-to-r from-white to-slate-300 bg-clip-text text-transparent mb-6">Select Your Industry</h2>
        <p className="text-slate-400 text-xl max-w-3xl mx-auto leading-relaxed">
          Choose your industry to unlock targeted research questions and AI-powered insights tailored to your market
        </p>
      </div>

      {/* TOP SECTION: Custom Input + Featured Industries */}
      <div className="space-y-12">
        {/* Custom Industry Input */}
        <div className="max-w-3xl mx-auto">
          <div className="glass-premium rounded-3xl p-8 border border-white/10">
            <form onSubmit={handleCustomIndustrySubmit} className="space-y-6">
              <div className="text-center">
                <h3 className="text-2xl font-bold text-white mb-2">Don't see your industry?</h3>
                <p className="text-slate-400 text-lg">Create a custom industry and get AI-generated research questions</p>
              </div>
              <div className="flex gap-4">
                <input
                  id="customIndustry"
                  type="text"
                  value={customIndustry}
                  onChange={(e) => setCustomIndustry(e.target.value)}
                  placeholder="e.g., Agriculture, Legal Tech, Gaming, Aerospace..."
                  className="flex-1 px-6 py-5 bg-slate-800/50 border border-white/10 rounded-2xl text-slate-200 placeholder-slate-400 focus:border-purple-400 focus:outline-none focus:ring-2 focus:ring-purple-400/20 transition-all duration-300 text-lg font-medium"
                  autoFocus
                />
                <button
                  type="submit"
                  disabled={!customIndustry.trim()}
                  className="px-8 py-5 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-2xl disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 font-bold text-lg shadow-glow hover:shadow-glow-lg flex items-center gap-2"
                >
                  <span>Start Research</span>
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                </button>
              </div>
            </form>
          </div>
        </div>

        {/* Featured Industries */}
        <div>
          <div className="text-center mb-10">
            <h3 className="text-3xl font-bold text-white mb-3">Popular Industries</h3>
            <p className="text-slate-400 text-lg">Most researched industries with ready-to-use templates</p>
          </div>
          <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-6 max-w-7xl mx-auto">
            {featuredIndustries.map((key) => {
              const industry = INDUSTRY_TEMPLATES[key as keyof typeof INDUSTRY_TEMPLATES];
              if (!industry) return null;
              return (
                <button
                  key={key}
                  onClick={() => onSelectIndustry(key)}
                  className="group relative bg-gradient-to-br from-slate-900/80 to-slate-800/80 border border-white/10 rounded-3xl p-6 hover:bg-slate-900/90 hover:border-white/20 transition-all duration-300 hover:scale-105 hover-lift backdrop-blur-sm"
                >
                  <div className="absolute -top-2 -right-2 w-6 h-6 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-full flex items-center justify-center text-xs font-bold text-black shadow-lg">
                    üî•
                  </div>
                  <div className="text-center">
                    <div className={`w-16 h-16 mx-auto mb-4 rounded-2xl bg-gradient-to-r ${industry.color} flex items-center justify-center text-3xl group-hover:scale-110 transition-all duration-300 shadow-glow group-hover:shadow-glow-lg`}>
                      {industry.icon}
                    </div>
                    <h4 className="text-slate-200 font-bold text-sm group-hover:text-white leading-tight">
                      {industry.name}
                    </h4>
                  </div>
                </button>
              );
            })}
          </div>
        </div>
      </div>

      {/* MIDDLE SECTION: Categorized Tabs */}
      <div className="space-y-10">
        <div className="text-center">
          <h3 className="text-3xl font-bold text-white mb-3">Browse by Category</h3>
          <p className="text-slate-400 text-lg">Explore industries organized by sector</p>
        </div>

        {/* Category Tabs */}
        <div className="flex flex-wrap justify-center gap-3 mb-10">
          {Object.entries(industryCategories).map(([key, category]) => (
            <button
              key={key}
              onClick={() => setActiveTab(key)}
              className={`px-8 py-4 rounded-2xl font-bold text-lg transition-all duration-300 hover:scale-105 ${
                activeTab === key
                  ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-glow hover:shadow-glow-lg'
                  : 'bg-slate-900/60 border border-white/10 text-slate-300 hover:bg-slate-900/80 hover:border-white/20 hover-lift backdrop-blur-sm'
              }`}
            >
              <span className="mr-3 text-xl">{category.icon}</span>
              {category.name}
            </button>
          ))}
        </div>

        {/* Category Industries */}
        <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6 max-w-7xl mx-auto">
          {industryCategories[activeTab as keyof typeof industryCategories].industries.map((key) => {
            const industry = INDUSTRY_TEMPLATES[key as keyof typeof INDUSTRY_TEMPLATES];
            if (!industry) return null;
            return (
              <button
                key={key}
                onClick={() => onSelectIndustry(key)}
                className="group bg-gradient-to-br from-slate-900/60 to-slate-800/60 border border-white/10 rounded-3xl p-6 hover:bg-slate-900/80 hover:border-white/20 transition-all duration-300 hover:scale-105 hover-lift backdrop-blur-sm"
              >
                <div className="text-center">
                  <div className={`w-14 h-14 mx-auto mb-4 rounded-2xl bg-gradient-to-r ${industry.color} flex items-center justify-center text-2xl group-hover:scale-110 transition-all duration-300 shadow-glow group-hover:shadow-glow-lg`}>
                    {industry.icon}
                  </div>
                  <h4 className="text-slate-200 font-bold text-sm group-hover:text-white leading-tight">
                    {industry.name}
                  </h4>
                </div>
              </button>
            );
          })}
        </div>
      </div>

      {/* BOTTOM SECTION: Browse All with Search */}
      <div className="space-y-10">
        <div className="text-center">
          <h3 className="text-3xl font-bold text-white mb-3">Browse All Industries</h3>
          <p className="text-slate-400 text-lg">Search through all 40+ industries with AI-generated research templates</p>
        </div>

        {/* Search Bar */}
        <div className="max-w-lg mx-auto">
          <div className="relative">
            <input
              type="text"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              placeholder="Search industries..."
              className="w-full px-8 py-5 bg-slate-900/60 border border-white/10 rounded-3xl text-slate-200 placeholder-slate-400 focus:border-purple-400 focus:outline-none focus:ring-2 focus:ring-purple-400/20 transition-all duration-300 text-lg font-medium backdrop-blur-sm"
            />
            <div className="absolute right-6 top-1/2 transform -translate-y-1/2 text-slate-400 text-xl">
              üîç
            </div>
          </div>
        </div>

        {/* All Industries Grid */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4 max-w-7xl mx-auto">
          {filteredIndustries.slice(0, showAllIndustries ? filteredIndustries.length : 24).map(([key, industry]) => (
            <button
              key={key}
              onClick={() => onSelectIndustry(key)}
              className="group bg-gradient-to-br from-slate-900/50 to-slate-800/50 border border-white/10 rounded-2xl p-4 hover:bg-slate-900/70 hover:border-white/20 transition-all duration-300 hover:scale-105 hover-lift backdrop-blur-sm"
            >
              <div className="text-center">
                <div className={`w-12 h-12 mx-auto mb-3 rounded-xl bg-gradient-to-r ${industry.color} flex items-center justify-center text-xl group-hover:scale-110 transition-all duration-300 shadow-glow group-hover:shadow-glow-lg`}>
                  {industry.icon}
                </div>
                <h4 className="text-slate-200 font-semibold text-sm group-hover:text-white leading-tight">
                  {industry.name}
                </h4>
              </div>
            </button>
          ))}
        </div>

        {/* Show More Button */}
        {filteredIndustries.length > 24 && (
          <div className="text-center">
            <button
              onClick={() => setShowAllIndustries(!showAllIndustries)}
              className="px-8 py-4 bg-gradient-to-r from-slate-800/60 to-slate-900/60 border border-white/10 hover:border-white/20 rounded-2xl text-slate-300 hover:text-white font-bold text-lg transition-all duration-300 hover-lift backdrop-blur-sm"
            >
              {showAllIndustries ? 'Show Less' : `Show All ${filteredIndustries.length} Industries`}
            </button>
          </div>
        )}
      </div>
    </div>
  );
}

// Beautiful Industry Questions Component
function IndustryQuestions({ industry, onSelectQuestion, onStartCustomQuestion }: {
  industry: string;
  onSelectQuestion: (question: string) => void;
  onStartCustomQuestion: () => void;
}) {
  const [questions, setQuestions] = useState<AIQuestion[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Get industry data from templates for UI elements
  const industryData = INDUSTRY_TEMPLATES[industry as keyof typeof INDUSTRY_TEMPLATES];

  useEffect(() => {
    const loadQuestions = async () => {
      try {
        setLoading(true);
        setError(null);
        const result = await getIndustryQuestions(industry);
        setQuestions(result.questions);
      } catch (err) {
        console.error('Error loading questions:', err);
        setError('Failed to generate questions. Using fallback questions.');
        // Fallback to template questions
        if (industryData) {
          setQuestions(industryData.questions.map((q, i) => ({
            id: `${industry}-fallback-${i}`,
            text: q,
            category: 'strategy' as const,
            estimatedValue: 'Strategic insight for business planning'
          })));
        }
      } finally {
        setLoading(false);
      }
    };

    loadQuestions();
  }, [industry, industryData]);

  // Loading state
  if (loading) {
    return (
      <div className="space-y-12 animate-fade-in">
        <div className="text-center">
          <div className={`w-20 h-20 mx-auto mb-6 rounded-3xl bg-gradient-to-r ${industryData?.color || 'from-slate-500 to-slate-600'} flex items-center justify-center text-4xl shadow-glow animate-bounce-in`}>
            {industryData?.icon || 'üè¢'}
          </div>
          <h2 className="text-3xl font-bold gradient-text-purple mb-4">
            {industryData?.name || industry.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')} Research
          </h2>
          <p className="text-slate-400 text-lg max-w-xl mx-auto">Generating AI-powered research questions...</p>
        </div>

        <div className="flex justify-center">
          <div className="loading-ring"></div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {Array.from({ length: 8 }).map((_, index) => (
            <div
              key={index}
              className="glass-subtle border border-white/10 rounded-3xl p-6 animate-pulse"
            >
              <div className="flex items-start gap-4">
                <div className="w-10 h-10 rounded-2xl bg-slate-700 flex items-center justify-center flex-shrink-0">
                  <span className="text-slate-500 font-bold">{index + 1}</span>
                </div>
                <div className="flex-1 space-y-2">
                  <div className="h-4 bg-slate-700 rounded animate-pulse"></div>
                  <div className="h-4 bg-slate-700 rounded w-3/4 animate-pulse"></div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  }

  // Error state
  if (error) {
    return (
      <div className="space-y-12 animate-fade-in">
        <div className="text-center">
          <div className={`w-20 h-20 mx-auto mb-6 rounded-3xl bg-gradient-to-r ${industryData?.color || 'from-red-500 to-red-600'} flex items-center justify-center text-4xl shadow-glow animate-bounce-in`}>
            ‚ö†Ô∏è
          </div>
          <h2 className="text-3xl font-bold gradient-text-purple mb-4">Question Generation Failed</h2>
          <p className="text-slate-400 text-lg max-w-xl mx-auto">{error}</p>
        </div>
      </div>
    );
  }

  const industryName = industryData?.name || industry.split('-').map(word =>
    word.charAt(0).toUpperCase() + word.slice(1)
  ).join(' ');

  const industryIcon = industryData?.icon || 'üè¢';
  const industryColor = industryData?.color || 'from-slate-500 to-slate-600';

  return (
    <div className="space-y-12 animate-fade-in">
      <div className="text-center">
        <div className={`w-20 h-20 mx-auto mb-6 rounded-3xl bg-gradient-to-r ${industryColor} flex items-center justify-center text-4xl shadow-glow animate-bounce-in`}>
          {industryIcon}
        </div>
        <h2 className="text-3xl font-bold gradient-text-purple mb-4">{industryName} Research</h2>
        <p className="text-slate-400 text-lg max-w-xl mx-auto">AI-generated research questions tailored for entrepreneurs</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {questions.map((question, index) => (
          <button
            key={question.id}
            onClick={(e) => {
              e.preventDefault();
              console.log('Question button clicked:', question.text);
              onSelectQuestion(question.text);
            }}
            className="group glass-subtle border border-white/10 rounded-3xl p-6 hover-lift hover-glow transition-all duration-300 text-left animate-slide-fade-in hover-scale"
            style={{ animationDelay: `${index * 100}ms` }}
          >
            <div className="flex items-start gap-4">
              <div className="w-10 h-10 rounded-2xl bg-gradient-to-r from-emerald-500 to-teal-500 flex items-center justify-center flex-shrink-0 shadow-glow group-hover:shadow-glow-lg transition-all duration-300">
                <span className="text-white font-bold">{index + 1}</span>
              </div>
              <div className="flex-1">
                <span className="text-slate-300 text-sm group-hover:text-white leading-relaxed group-hover:gradient-text-ocean transition-all duration-300">
                  {question.text}
                </span>
                {question.estimatedValue && (
                  <div className="mt-3 text-xs text-slate-500 group-hover:text-slate-400 transition-colors">
                    üí° {question.estimatedValue}
                  </div>
                )}
              </div>
            </div>
          </button>
        ))}
      </div>

      <div className="text-center pt-8 space-y-4">
        <button
          onClick={() => {
            const startupIdeasQuestion = `Generate 20 innovative startup ideas for the ${industryName} industry based on current trends, market gaps, and emerging opportunities. Include brief descriptions of each idea and potential market size.`;
            onSelectQuestion(startupIdeasQuestion);
          }}
          className="bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-400 hover:to-pink-500 px-8 py-4 rounded-2xl text-lg font-bold text-white transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-xl"
        >
          <span className="flex items-center gap-3">
            üí° Generate 20 Startup Ideas
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7l5 5m0 0l-5 5m5-5H6" />
            </svg>
          </span>
        </button>

        <div className="text-center">
          <button
            onClick={onStartCustomQuestion}
            className="btn-secondary px-6 py-3 rounded-2xl text-slate-300 hover:text-white font-medium transition-all duration-300 hover-lift hover-scale"
          >
            Or ask your own question ‚Üí
          </button>
        </div>
      </div>
    </div>
  );
}

// Helper component for sources list
function SourcesList({ sources }: { sources: Source[] }) {
  const [showSourcesPanel, setShowSourcesPanel] = useState(false);
  const [expandedSourceIndex, setExpandedSourceIndex] = useState<number | null>(null);
  
  return (
    <>
      {/* Sources button with favicon preview */}
      <div className="mt-6 flex items-center gap-3">
        <div className="flex -space-x-2">
          {(() => {
            // Get unique domains
            const uniqueDomains = new Map<string, Source>();
            sources.forEach(source => {
              try {
                const domain = new URL(source.url).hostname;
                if (!uniqueDomains.has(domain)) {
                  uniqueDomains.set(domain, source);
                }
              } catch {}
            });
            const uniqueSources = Array.from(uniqueDomains.values());
            
            return (
              <>
                {uniqueSources.slice(0, 5).map((source, i) => (
                  <Image 
                    key={i}
                    src={getFaviconUrl(source.url)} 
                    alt=""
                    width={24}
                    height={24}
                    className="w-6 h-6 rounded-full border-2 border-white dark:border-gray-900 bg-white"
                    style={{ zIndex: 5 - i }}
                    onError={(e) => {
                      const img = e.target as HTMLImageElement;
                      img.src = getDefaultFavicon(24);
                      markFaviconFailed(source.url);
                    }}
                  />
                ))}
                {uniqueSources.length > 5 && (
                  <div className="w-6 h-6 rounded-full border-2 border-white dark:border-gray-900 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
                    <span className="text-[10px] font-medium text-gray-600 dark:text-gray-300">+{uniqueSources.length - 5}</span>
                  </div>
                )}
              </>
            );
          })()}
        </div>
        <button
          onClick={() => setShowSourcesPanel(true)}
          className="text-sm text-slate-400 hover:text-slate-300 flex items-center gap-2 transition-colors"
        >
          <span>View {sources.length} sources</span>
          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>

      {/* Click-away overlay */}
      {showSourcesPanel && (
        <div 
          className="fixed inset-0 z-30"
          onClick={() => setShowSourcesPanel(false)}
        />
      )}
      
      {/* Sources Panel */}
      <div className={`fixed inset-y-0 right-0 w-96 bg-slate-900 border-l border-slate-700 transform transition-transform duration-300 ease-in-out ${
        showSourcesPanel ? 'translate-x-0' : 'translate-x-full'
      } z-40 overflow-y-auto scrollbar-custom`}>
        <div className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-lg font-semibold text-slate-200">Sources ({sources.length})</h3>
            <button
              onClick={() => setShowSourcesPanel(false)}
              className="p-2 hover:bg-slate-800 rounded-lg transition-colors text-slate-400 hover:text-slate-300"
            >
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
          
          <div className="space-y-3">
            {sources.map((source, i) => (
              <div key={i} className="border border-slate-700 rounded-lg overflow-hidden transition-colors hover:border-slate-600">
                <div 
                  className={`p-3 hover:bg-slate-800/50 cursor-pointer ${expandedSourceIndex === i ? '' : 'rounded-lg'}`}
                  onClick={() => setExpandedSourceIndex(expandedSourceIndex === i ? null : i)}
                >
                  <div className="flex items-start gap-3">
                    <span className="text-sm font-medium text-emerald-400 mt-0.5">[{i + 1}]</span>
                    <Image 
                      src={getFaviconUrl(source.url)} 
                      alt=""
                      width={20}
                      height={20}
                      className="w-5 h-5 mt-0.5 flex-shrink-0"
                      onError={(e) => {
                        const img = e.target as HTMLImageElement;
                        img.src = getDefaultFavicon(20);
                        markFaviconFailed(source.url);
                      }}
                    />
                    <div className="flex-1 min-w-0">
                      <a 
                        href={source.url} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="font-medium text-sm text-slate-200 hover:text-emerald-400 line-clamp-2 transition-colors"
                        onClick={(e) => e.stopPropagation()}
                      >
                        {source.title}
                      </a>
                      <p className="text-xs text-slate-400 mt-1 truncate">
                        {new URL(source.url).hostname}
                      </p>
                    </div>
                    <svg 
                      className={`w-4 h-4 text-slate-400 transition-transform ${expandedSourceIndex === i ? 'rotate-180' : ''}`} 
                      fill="none" 
                      stroke="currentColor" 
                      viewBox="0 0 24 24"
                    >
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                    </svg>
                  </div>
                </div>
                
                {expandedSourceIndex === i && source.content && (
                  <div className="border-t border-slate-700">
                    <div className="px-4 py-2 border-b border-slate-700 bg-slate-800/30">
                      <span className="text-xs text-slate-400">
                        {source.content.length.toLocaleString()} characters
                      </span>
                    </div>
                    <div className="p-4 h-96 overflow-y-auto scrollbar-custom">
                      <div className="prose prose-sm dark:prose-invert max-w-none">
                        <MarkdownRenderer content={source.content} />
                      </div>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </>
  );
}

export function Chat() {
  const [messages, setMessages] = useState<Array<{
    id: string;
    role: 'user' | 'assistant';
    content: string | React.ReactNode;
    isSearch?: boolean;
    searchResults?: string;
  }>>([]);
  const [input, setInput] = useState('');
  const [isSearching, setIsSearching] = useState(false);
  const [selectedIndustry, setSelectedIndustry] = useState<string | null>(null);
  const [firecrawlApiKey, setFirecrawlApiKey] = useState<string>('');
  const [hasApiKey, setHasApiKey] = useState<boolean>(false);
  const [showApiKeyModal, setShowApiKeyModal] = useState<boolean>(false);
  const [, setIsCheckingEnv] = useState<boolean>(true);
  const [pendingQuery, setPendingQuery] = useState<string>('');
  const [showCustomQuestionPopup, setShowCustomQuestionPopup] = useState<boolean>(false);
  const [customQuestionInput, setCustomQuestionInput] = useState<string>('');
  const messagesContainerRef = useRef<HTMLDivElement>(null);

  // Check for environment variables on mount
  useEffect(() => {
    const checkEnvironment = async () => {
      setIsCheckingEnv(true);
      try {
        const response = await fetch('/api/check-env');
        const data = await response.json();
        
        if (data.environmentStatus) {
          setHasApiKey(data.environmentStatus.FIRECRAWL_API_KEY);
        }
      } catch (error) {
        console.error('Failed to check environment:', error);
        setHasApiKey(false);
      } finally {
        setIsCheckingEnv(false);
      }
    };

    checkEnvironment();
  }, []);

  // Auto-scroll to bottom when messages change
  useEffect(() => {
    if (messagesContainerRef.current) {
      // Use setTimeout to ensure DOM has updated
      setTimeout(() => {
        if (messagesContainerRef.current) {
          messagesContainerRef.current.scrollTo({
            top: messagesContainerRef.current.scrollHeight,
            behavior: 'smooth'
          });
        }
      }, 100);
    }
  }, [messages]);

  const saveApiKey = () => {
    if (firecrawlApiKey.trim()) {
      setHasApiKey(true);
      setShowApiKeyModal(false);
      toast.success('API key saved! Starting your research...');
      
      if (pendingQuery) {
        performSearch(pendingQuery);
        setPendingQuery('');
      }
    }
  };



  const performSearch = async (query: string) => {
    setIsSearching(true);

    // Add industry context to the query if available
    const contextualQuery = selectedIndustry 
      ? `${query} (Industry: ${INDUSTRY_TEMPLATES[selectedIndustry as keyof typeof INDUSTRY_TEMPLATES]?.name || selectedIndustry.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')})`
      : query;

    const assistantMsgId = (Date.now() + 1).toString();
    const events: SearchEvent[] = [];
    
    setMessages(prev => [...prev, {
      id: assistantMsgId,
      role: 'assistant',
      content: <SearchDisplay events={events} />,
      isSearch: true
    }]);

    try {
      const conversationContext: Array<{ query: string; response: string }> = [];
      
      for (let i = 0; i < messages.length; i++) {
        const msg = messages[i];
        if (msg.role === 'user' && i + 1 < messages.length) {
          const nextMsg = messages[i + 1];
          if (nextMsg.role === 'assistant' && nextMsg.searchResults) {
            conversationContext.push({
              query: msg.content as string,
              response: nextMsg.searchResults
            });
          }
        }
      }
      
      const { stream } = await search(contextualQuery, conversationContext, firecrawlApiKey || undefined);
      let finalContent = '';
      
      let streamingStarted = false;
      const resultMsgId = (Date.now() + 2).toString();
      
      for await (const event of readStreamableValue(stream)) {
        if (event) {
          events.push(event);
          
          if (event.type === 'content-chunk') {
            const content = events
              .filter(e => e.type === 'content-chunk')
              .map(e => e.type === 'content-chunk' ? e.chunk : '')
              .join('');
            
            if (!streamingStarted) {
              streamingStarted = true;
              setMessages(prev => [...prev, {
                id: resultMsgId,
                role: 'assistant',
                content: <MarkdownRenderer content={content} streaming={true} />,
                isSearch: false
              }]);
            } else {
              setMessages(prev => prev.map(msg => 
                msg.id === resultMsgId 
                  ? { ...msg, content: <MarkdownRenderer content={content} streaming={true} /> }
                  : msg
              ));
            }
          }
          
          if (event.type === 'final-result') {
            finalContent = event.content;
            
            setMessages(prev => prev.map(msg => 
              msg.id === resultMsgId 
                ? {
                    ...msg,
                    content: (
                      <div className="space-y-4">
                        <div className="prose prose-sm dark:prose-invert max-w-none">
                          <MarkdownRenderer content={finalContent} />
                        </div>
                        <CitationTooltip sources={event.sources || []} />
                        
                        {/* Follow-up Questions */}
                        {event.followUpQuestions && event.followUpQuestions.length > 0 && (
                          <div className="mt-8 pt-6 border-t border-slate-700">
                            <h3 className="text-sm font-semibold text-slate-300 mb-3">
                              Related Research Questions
                            </h3>
                            <div className="space-y-2">
                              {event.followUpQuestions.map((question, index) => (
                                <button
                                  key={index}
                                  onClick={async () => {
                                    // Add the question as a user message
                                    const userMsgId = Date.now().toString();
                                    setMessages(prev => [...prev, {
                                      id: userMsgId,
                                      role: 'user',
                                      content: question,
                                      isSearch: true
                                    }]);
                                    
                                    // Force scroll to bottom after adding the message
                                    setTimeout(() => {
                                      const messagesContainer = document.querySelector('[data-messages-container]') as HTMLElement;
                                      if (messagesContainer) {
                                        messagesContainer.scrollTo({
                                          top: messagesContainer.scrollHeight,
                                          behavior: 'smooth'
                                        });
                                      }
                                    }, 150);
                                    
                                    // Process the question immediately
                                    await performSearch(question);
                                  }}
                                  className="block w-full text-left px-4 py-3 rounded-lg border border-slate-700 hover:border-emerald-500 hover:bg-emerald-500/10 transition-colors group"
                                >
                                  <div className="flex items-center justify-between">
                                    <span className="text-sm text-slate-300 group-hover:text-slate-200">
                                      {question}
                                    </span>
                                    <svg className="w-4 h-4 text-slate-400 group-hover:text-emerald-400 flex-shrink-0 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                                    </svg>
                                  </div>
                                </button>
                              ))}
                            </div>
                          </div>
                        )}
                        
                        <SourcesList sources={event.sources || []} />
                      </div>
                    ),
                    searchResults: finalContent
                  }
                : msg
            ));
          }
          
          setMessages(prev => prev.map(msg => 
            msg.id === assistantMsgId 
              ? { ...msg, content: <SearchDisplay events={[...events]} />, searchResults: finalContent }
              : msg
          ));
        }
      }
    } catch (error) {
      console.error('Search error:', error);
      setMessages(prev => prev.filter(msg => msg.id !== assistantMsgId));
      
      const errorMessage = error instanceof Error ? error.message : 'An error occurred during research';
      setMessages(prev => [...prev, {
        id: Date.now().toString(),
        role: 'assistant',
        content: (
          <div className="p-4 border border-red-500/50 bg-red-500/10 rounded-lg">
            <p className="text-red-400 font-medium">Research Error</p>
            <p className="text-red-300 text-sm mt-1">{errorMessage}</p>
            {(errorMessage.includes('API key') || errorMessage.includes('OPENAI_API_KEY')) && (
              <p className="text-red-300 text-sm mt-2">
                Please ensure all required API keys are set in your environment variables:
                <br />‚Ä¢ OPENAI_API_KEY (for GPT-4o)
                <br />‚Ä¢ ANTHROPIC_API_KEY (optional, for Claude)
                <br />‚Ä¢ FIRECRAWL_API_KEY (can be provided via UI)
              </p>
            )}
          </div>
        ),
        isSearch: false
      }]);
    } finally {
      setIsSearching(false);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || isSearching) return;

    const userMessage = input;
    setInput('');

    if (!hasApiKey) {
      setPendingQuery(userMessage);
      setShowApiKeyModal(true);
      
      const userMsgId = Date.now().toString();
      setMessages(prev => [...prev, {
        id: userMsgId,
        role: 'user',
        content: userMessage,
        isSearch: true
      }]);
      return;
    }

    const userMsgId = Date.now().toString();
    setMessages(prev => [...prev, {
      id: userMsgId,
      role: 'user',
      content: userMessage,
      isSearch: true
    }]);

    await performSearch(userMessage);
  };

  const handleIndustrySelect = (industry: string) => {
    console.log('Industry selected:', industry);
    setSelectedIndustry(industry);
  };

  const handleQuestionSelect = async (question: string) => {
    console.log('Question selected:', question);
    if (question) {
      // Clear the input immediately when question is selected
      setInput('');

      // Check if API key is available, if not show modal
      if (!hasApiKey) {
        setPendingQuery(question);
        setShowApiKeyModal(true);

        const userMsgId = Date.now().toString();
        setMessages(prev => [...prev, {
          id: userMsgId,
          role: 'user',
          content: question,
          isSearch: true
        }]);
        return;
      }

      // Directly perform search instead of form submission
      const userMsgId = Date.now().toString();
      setMessages(prev => [...prev, {
        id: userMsgId,
        role: 'user',
        content: question,
        isSearch: true
      }]);

      await performSearch(question);
    } else {
      // Focus on input for custom question
      const inputElement = document.querySelector('input[type="text"]') as HTMLInputElement;
      if (inputElement) {
        inputElement.focus();
      }
    }
  };

  const resetToIndustrySelection = () => {
    setSelectedIndustry(null);
    setMessages([]);
  };

  const startCustomQuestion = () => {
    // Show the custom question popup
    setShowCustomQuestionPopup(true);
    setCustomQuestionInput('');
  };

  const handleCustomQuestionSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!customQuestionInput.trim()) {
      toast.error('Please enter a research question');
      return;
    }

    const question = customQuestionInput.trim();
    setShowCustomQuestionPopup(false);
    setCustomQuestionInput('');

    // Use the existing handleQuestionSelect logic
    await handleQuestionSelect(question);
  };

  return (
    <>
      <StartupChat>
        {!selectedIndustry ? (
          <div className="flex flex-col relative z-10">
            {/* Enhanced Hero Section */}
            <div className="flex items-center justify-center px-6 py-16">
              <div className="text-center max-w-7xl mx-auto">
                {/* Main Hero Content */}
                <div className="mb-20">

                  <h1 className="text-7xl md:text-9xl font-black mb-8 leading-none tracking-tight">
                    <span className="block bg-gradient-to-r from-white via-purple-200 to-pink-200 bg-clip-text text-transparent animate-gradient-shift">
                      Validate Your
                    </span>
                    <span className="block bg-gradient-to-r from-emerald-400 via-teal-400 to-cyan-400 bg-clip-text text-transparent animate-gradient-shift" style={{ animationDelay: '1s' }}>
                      Startup Ideas
                    </span>
                  </h1>

                  <p className="text-xl md:text-2xl text-slate-300 max-w-4xl mx-auto leading-relaxed mb-12">
                    AI-powered research agents to help you decide if your startup is worth building
                    across <span className="text-yellow-400 font-bold text-3xl">40+ industries</span>
                  </p>

                  {/* Research Process Visualization */}
                  <div className="max-w-6xl mx-auto mb-16">
                    <div className="glass-premium rounded-3xl p-8 border border-white/10">
                      <div className="text-center mb-8">
                        <h3 className="text-2xl font-bold text-white mb-3">How Our Research Agents Work</h3>
                        <p className="text-slate-400 text-lg">Not just ChatGPT - this is deep research with validation & citations</p>
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        {/* Step 1 */}
                        <div className="text-center group">
                          <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center text-2xl shadow-glow group-hover:shadow-glow-lg transition-all duration-300">
                            üîç
                          </div>
                          <h4 className="text-white font-bold text-sm mb-2">Break Down</h4>
                          <p className="text-slate-400 text-xs leading-relaxed">Complex queries split into focused sub-questions</p>
                        </div>

                        {/* Step 2 */}
                        <div className="text-center group">
                          <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl flex items-center justify-center text-2xl shadow-glow group-hover:shadow-glow-lg transition-all duration-300">
                            üî•
                          </div>
                          <h4 className="text-white font-bold text-sm mb-2">Search & Extract</h4>
                          <p className="text-slate-400 text-xs leading-relaxed">Firecrawl API finds & extracts content from real sources</p>
                        </div>

                        {/* Step 3 */}
                        <div className="text-center group">
                          <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-emerald-500 to-teal-500 rounded-2xl flex items-center justify-center text-2xl shadow-glow group-hover:shadow-glow-lg transition-all duration-300">
                            ‚úÖ
                          </div>
                          <h4 className="text-white font-bold text-sm mb-2">Validate & Retry</h4>
                          <p className="text-slate-400 text-xs leading-relaxed">AI checks if sources actually answer questions (70%+ confidence)</p>
                        </div>

                        {/* Step 4 */}
                        <div className="text-center group">
                          <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-2xl flex items-center justify-center text-2xl shadow-glow group-hover:shadow-glow-lg transition-all duration-300">
                            üìä
                          </div>
                          <h4 className="text-white font-bold text-sm mb-2">Synthesize & Cite</h4>
                          <p className="text-slate-400 text-xs leading-relaxed">GPT-4o combines findings with full citations</p>
                        </div>
                      </div>

                      <div className="mt-8 pt-6 border-t border-white/10">
                        <div className="flex flex-wrap items-center justify-center gap-6 text-sm text-slate-400">
                          <div className="flex items-center gap-2">
                            <div className="w-2 h-2 bg-emerald-400 rounded-full animate-pulse"></div>
                            <span>Real-time web search</span>
                          </div>
                          <div className="w-px h-4 bg-white/10"></div>
                          <div className="flex items-center gap-2">
                            <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
                            <span>Answer validation</span>
                          </div>
                          <div className="w-px h-4 bg-white/10"></div>
                          <div className="flex items-center gap-2">
                            <div className="w-2 h-2 bg-purple-400 rounded-full animate-pulse"></div>
                            <span>Auto-retry failed searches</span>
                          </div>
                          <div className="w-px h-4 bg-white/10"></div>
                          <div className="flex items-center gap-2">
                            <div className="w-2 h-2 bg-orange-400 rounded-full animate-pulse"></div>
                            <span>Full source citations</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* CTA Button */}
                  <div className="flex items-center justify-center mb-16">
                    <button
                      onClick={() => setSelectedIndustry('industry-selection')}
                      className="group px-8 py-5 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-2xl font-bold text-lg transition-all duration-300 hover:scale-105 shadow-glow hover:shadow-glow-lg flex items-center gap-3"
                    >
                      <span>Explore Industries</span>
                      <svg className="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                      </svg>
                    </button>
                  </div>

                  {/* Featured Industries Grid */}
                  <div className="mb-12">
                    <div className="text-center mb-10">
                      <h2 className="text-3xl font-bold text-white mb-3">Popular Industries</h2>
                      <p className="text-slate-400 text-lg">Start with our most researched industry templates</p>
                    </div>

                    <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-6 max-w-7xl mx-auto">
                      {[
                        { key: 'saas', popular: true },
                        { key: 'fintech', popular: true },
                        { key: 'healthcare', popular: true },
                        { key: 'ecommerce', popular: true },
                        { key: 'edtech', popular: true },
                        { key: 'gaming', popular: true },
                        { key: 'cybersecurity', popular: true },
                        { key: 'ai-ml', popular: true }
                      ].map(({ key, popular }) => {
                        const industry = INDUSTRY_TEMPLATES[key as keyof typeof INDUSTRY_TEMPLATES];
                        if (!industry) return null;
                        return (
                          <button
                            key={key}
                            onClick={() => setSelectedIndustry(key)}
                            className="group relative bg-gradient-to-br from-slate-900/80 to-slate-800/80 border border-white/10 rounded-3xl p-6 hover:bg-slate-900/90 hover:border-white/20 transition-all duration-300 hover:scale-105 hover-lift backdrop-blur-sm"
                          >
                            {popular && (
                              <div className="absolute -top-2 -right-2 w-6 h-6 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-full flex items-center justify-center text-xs font-bold text-black shadow-lg">
                                üî•
                              </div>
                            )}
                            <div className="text-center">
                              <div className={`w-16 h-16 mx-auto mb-4 rounded-2xl bg-gradient-to-r ${industry.color} flex items-center justify-center text-3xl group-hover:scale-110 transition-all duration-300 shadow-glow group-hover:shadow-glow-lg`}>
                                {industry.icon}
                              </div>
                              <h3 className="text-slate-200 font-bold text-sm group-hover:text-white leading-tight">
                                {industry.name}
                              </h3>
                            </div>
                          </button>
                        );
                      })}
                    </div>

                    {/* View All Industries Button */}
                    <div className="text-center mt-12">
                      <button
                        onClick={() => setSelectedIndustry('industry-selection')}
                        className="group px-10 py-5 bg-gradient-to-r from-slate-800/80 to-slate-900/80 border border-white/10 hover:border-white/20 rounded-2xl text-slate-300 hover:text-white font-bold text-lg transition-all duration-300 hover-lift backdrop-blur-sm flex items-center gap-3 mx-auto"
                      >
                        <span>View All 40+ Industries</span>
                        <svg className="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                        </svg>
                      </button>
                    </div>
                  </div>

                  {/* Custom Industry Input */}
                  <div className="max-w-3xl mx-auto mb-16">
                    <div className="glass-premium rounded-3xl p-8 border border-white/10">
                      <div className="text-center mb-6">
                        <h3 className="text-xl font-bold text-white mb-2">Don't see your industry?</h3>
                        <p className="text-slate-400">Create a custom industry and get tailored research questions</p>
                      </div>
                      <form onSubmit={(e) => {
                        e.preventDefault();
                        const formData = new FormData(e.currentTarget);
                        const industry = formData.get('customIndustry') as string;
                        if (industry?.trim()) {
                          setSelectedIndustry(industry.trim().toLowerCase().replace(/\s+/g, '-'));
                        }
                      }} className="space-y-4">
                        <div className="flex gap-3">
                          <input
                            id="customIndustry"
                            name="customIndustry"
                            type="text"
                            placeholder="e.g., Agriculture, Legal Tech, Gaming, Aerospace..."
                            className="flex-1 px-6 py-4 bg-slate-800/50 border border-white/10 rounded-2xl text-slate-200 placeholder-slate-400 focus:border-purple-400 focus:outline-none focus:ring-2 focus:ring-purple-400/20 transition-all duration-300 text-lg"
                          />
                          <button
                            type="submit"
                            className="px-8 py-4 bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600 text-white rounded-2xl transition-all duration-300 font-medium text-lg shadow-glow hover:shadow-glow-lg"
                          >
                            Start Research
                          </button>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ) : selectedIndustry === 'industry-selection' ? (
          <div className="flex items-center justify-center px-6 py-8">
            <div className="w-full max-w-7xl">
              <HybridIndustrySelection onSelectIndustry={handleIndustrySelect} />
            </div>
          </div>
        ) : messages.length === 0 ? (
            <div className="flex-1 flex items-center justify-center px-6">
              <div className="w-full">
                <div className="mb-6">
                  <button
                    onClick={resetToIndustrySelection}
                    className="flex items-center gap-2 text-slate-400 hover:text-slate-300 transition-colors"
                  >
                    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                    </svg>
                    <span>Change Industry</span>
                  </button>
                </div>

                <IndustryQuestions
                  industry={selectedIndustry}
                  onSelectQuestion={handleQuestionSelect}
                  onStartCustomQuestion={startCustomQuestion}
                />
              </div>
            </div>
          ) : (
            <>
              {/* Full-screen conversation view */}
              <div className="min-h-screen flex flex-col">
                {/* Command History */}
                <div className="flex-1 overflow-auto px-6 py-6">
                  <div className="mb-4">
                    <button
                      onClick={resetToIndustrySelection}
                      className="flex items-center gap-2 text-slate-400 hover:text-slate-300 transition-colors text-sm"
                    >
                      <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                      </svg>
                      <span>Change Industry</span>
                    </button>
                  </div>
                  <CommandHistory messages={messages} isSearching={isSearching} />
                </div>


              </div>
            </>
          )}
      </StartupChat>

      {/* Custom Question Modal - Moved outside StartupChat for proper centering */}
      <Dialog open={showCustomQuestionPopup} onOpenChange={setShowCustomQuestionPopup}>
        <DialogContent className="sm:max-w-[600px] bg-slate-900 border border-slate-700 text-slate-200 max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="text-slate-200 text-xl flex items-center gap-3">
              <div className="w-10 h-10 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-lg flex items-center justify-center">
                <span className="text-white text-lg">üí°</span>
              </div>
              Ask Your Own Question
            </DialogTitle>
            <DialogDescription className="text-slate-400">
              Tell us what you'd like to research about {selectedIndustry ? (INDUSTRY_TEMPLATES[selectedIndustry as keyof typeof INDUSTRY_TEMPLATES]?.name || selectedIndustry.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')) : 'your industry'}.
            </DialogDescription>
          </DialogHeader>
          <form onSubmit={handleCustomQuestionSubmit} className="space-y-4">
            <div className="space-y-2">
              <label htmlFor="customQuestion" className="text-slate-300 text-sm font-medium">
                Your Research Question
              </label>
              <textarea
                id="customQuestion"
                value={customQuestionInput}
                onChange={(e) => setCustomQuestionInput(e.target.value)}
                placeholder={(() => {
                  const industryName = selectedIndustry ? (INDUSTRY_TEMPLATES[selectedIndustry as keyof typeof INDUSTRY_TEMPLATES]?.name || selectedIndustry.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')) : 'your industry';
                  const examples = {
                    'saas': 'e.g., What\'s the average CAC for B2B SaaS companies in my vertical?',
                    'fintech': 'e.g., What\'s the market size for digital banking platforms in the US?',
                    'healthcare': 'e.g., What\'s the market size for telemedicine platforms in the US?',
                    'ecommerce': 'e.g., What\'s the market size for headless commerce platforms?',
                    'real-estate': 'e.g., What\'s the TAM/SAM/SOM for PropTech in the US real estate market?',
                    'automotive': 'e.g., What\'s the market size for EV charging infrastructure in North America?',
                    'content-creation': 'e.g., What\'s the market size for AI-powered content creation tools?',
                    'youtube': 'e.g., What\'s the total revenue generated by the YouTube creator economy?',
                    'edtech': 'e.g., What\'s the market size for online learning platforms in higher education?',
                    'foodtech': 'e.g., What\'s the market size for meal kit delivery services?',
                    'cleantech': 'e.g., What\'s the market size for renewable energy software platforms?',
                    'gaming': 'e.g., What\'s the market size for gaming monetization platforms?',
                    'hr-tech': 'e.g., What\'s the market size for applicant tracking systems?',
                    'proptech': 'e.g., What\'s the market size for smart building technology?',
                    'agritech': 'e.g., What\'s the market size for precision agriculture technology?',
                    'legaltech': 'e.g., What\'s the market size for legal practice management software?',
                    'insurtech': 'e.g., What\'s the market size for usage-based auto insurance platforms?',
                    'marketplace': 'e.g., What\'s the market size for B2B marketplace platforms in manufacturing?',
                    'default': `e.g., What are the biggest challenges facing ${industryName.toLowerCase()} companies?`
                  };
                  return examples[selectedIndustry as keyof typeof examples] || examples.default;
                })()}
                className="w-full h-32 bg-slate-800/50 border border-slate-700 rounded-lg px-4 py-3 text-slate-200 placeholder-slate-400 focus:border-emerald-500 focus:outline-none focus:ring-2 focus:ring-emerald-500/20 resize-none"
                autoFocus
              />
            </div>
            <div className="flex gap-3 justify-end pt-4">
              <Button
                type="button"
                variant="outline"
                onClick={() => {
                  setShowCustomQuestionPopup(false);
                  setCustomQuestionInput('');
                }}
                className="bg-slate-800 hover:bg-slate-700 text-slate-300 border-slate-600"
              >
                Cancel
              </Button>
              <Button
                type="submit"
                disabled={!customQuestionInput.trim()}
                className="bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-400 hover:to-teal-400 text-white font-medium px-6"
              >
                Start Research ‚Üí
              </Button>
            </div>
          </form>
        </DialogContent>
      </Dialog>

      {/* API Key Modal */}
      <Dialog open={showApiKeyModal} onOpenChange={setShowApiKeyModal}>
        <DialogContent className="sm:max-w-[425px] bg-slate-900 border border-slate-700 text-slate-200">
          <DialogHeader>
            <DialogTitle className="text-slate-200 text-xl">Firecrawl API Key Required</DialogTitle>
            <DialogDescription className="text-slate-400">
              To access real-time market research, please provide your Firecrawl API key.
            </DialogDescription>
          </DialogHeader>
          <div className="grid gap-4 py-4">
            <div className="space-y-2">
              <Button
                onClick={() => window.open('https://www.firecrawl.dev/app/api-keys', '_blank')}
                className="w-full bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-400 hover:to-teal-400 text-white font-medium"
              >
                Get API Key ‚Üí
              </Button>
            </div>
            <div className="space-y-2">
              <label htmlFor="apiKey" className="text-slate-300 text-sm font-medium">
                Enter your API key
              </label>
              <Input
                id="apiKey"
                type="password"
                value={firecrawlApiKey}
                onChange={(e) => setFirecrawlApiKey(e.target.value)}
                placeholder="fc-..."
                className="w-full bg-slate-800 border-slate-700 text-slate-200 placeholder-slate-400 focus:border-emerald-500"
              />
            </div>
          </div>
          <div className="flex gap-2 justify-end">
            <Button
              variant="outline"
              onClick={() => setShowApiKeyModal(false)}
              className="bg-slate-800 hover:bg-slate-700 text-slate-300 border-slate-600"
            >
              Cancel
            </Button>
            <Button
              onClick={saveApiKey}
              disabled={!firecrawlApiKey.trim()}
              className="bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-400 hover:to-teal-400 text-white"
            >
              Start Research
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </>
  );
}